services:
  training:
    build: ./training
    container_name: training_service
    volumes:
      # Mount the shared volume to a path inside the container
      - model_artifacts:/artifacts

  forecasting-api:
    build: ./forecasting_service
    container_name: forecasting_api
    ports:
      - "8000:8000"
    volumes:
      # Mount the same shared volume
      - model_artifacts:/artifacts
    depends_on:
      # Make it wait for the training to complete
      training:
        condition: service_completed_successfully

  simulation-api:
    build: ./simulation_service
    container_name: simulation_api
    ports:
      - "8001:8000"

  frontend:
    build: ./frontend
    container_name: frontend_app
    ports:
      - "8501:8501"
    depends_on:
      - forecasting-api
      - simulation-api

volumes:
  # Define the shared volume
  model_artifacts: